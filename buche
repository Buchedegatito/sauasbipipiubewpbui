/*
    🏠 SISTEMA DE AMUEBLADO AUTOMÁTICO DE CASAS 🏠
    🪑 Para Arma 3 - Versión Mejorada 2025
    👨‍💻 Autor: Buchedegatito
*/

// ════ INICIALIZACIÓN ════
if (isNil "_this") then { _this = [50, 5]; };
if ((count _this) < 2) then { _this = [50, 5]; };
waitUntil {!isNull findDisplay 46};

// Variables principales
BUCHEDEG_muebles_version = "2.5";
BUCHEDEG_muebles_activo = true;
BUCHEDEG_muebles_radio = _this select 0;
BUCHEDEG_muebles_tiempo = _this select 1;
BUCHEDEG_muebles_casas = [];
BUCHEDEG_muebles_ultimapos = [0,0,0];

// Seed para sincronización entre jugadores
if (isServer) then {
    if (isNil "BUCHEDEG_muebles_seed") then {
        BUCHEDEG_muebles_seed = floor(random 100000);
        publicVariable "BUCHEDEG_muebles_seed";
    };
} else {
    if (isNil "BUCHEDEG_muebles_seed") then {
        waitUntil {!isNil "BUCHEDEG_muebles_seed"};
    };
};
random BUCHEDEG_muebles_seed;

// Función de log
BUCHEDEG_fnc_log = {
    diag_log format ["[BUCHEDEG] %1", _this];
};

// CONVERTIR A NÚMERO (CRITICAL)
BUCHEDEG_fnc_toNumber = {
    private _value = _this;
    private _result = 0;
    
    if (typeName _value == "STRING") then {
        _result = parseNumber _value;
    } else {
        _result = _value;
    };
    
    _result
};

// AMUEBLAR CASA
BUCHEDEG_fnc_amueblarCasa = {
    params ["_edificio"];
    private ["_tipo", "_items", "_plantillas", "_spawned"];
    
    // Ignorar casas marcadas
    if (_edificio getVariable ["BUCHEDEG_amueblado", 0] == -1 || 
        _edificio getVariable ["BUCHEDEG_amueblado", 0] == -2) exitWith {};
    
    // Configurar muebles según tipo
    if (_edificio getVariable ["BUCHEDEG_amueblado", 0] == 0) then {
        _tipo = typeOf _edificio;
        
        // Detectar tipo de edificio
        switch (_tipo) do {
            case "Land_i_Barracks_V1_F": {
                _plantillas = [[["CUP_vojenska_palanda",[-7.69653,-1.73047,3.88763],0],["CUP_vojenska_palanda",[-12.9707,-2.98145,3.88763],90]]];
                _edificio setVariable ["BUCHEDEG_amueblado", 1];
                _edificio setVariable ["BUCHEDEG_muebles", _plantillas];
            };
            
            case "Land_House_2W05_F": {
                _plantillas = [[["Land_WoodenTable_large_F",[4.16514,-3.94405,1.02289],359.74],["Land_ChairWood_F",[4.2833,-4.99288,0.594582],-198.35]]];
                _edificio setVariable ["BUCHEDEG_amueblado", 1];
                _edificio setVariable ["BUCHEDEG_muebles", _plantillas];
            };
            
            case "Land_House_1W07_F": {
                _plantillas = [[["Land_Table_EP1",[-3.49841,-1.91229,0.54191],-271.56],["CUP_Kitchenstove_Elec",[1.98498,1.52179,0.1379],0.44]]];
                _edificio setVariable ["BUCHEDEG_amueblado", 1];
                _edificio setVariable ["BUCHEDEG_muebles", _plantillas];
            };
            
            case "Land_House_1W10_F": {
                _plantillas = [[["CUP_vojenska_palanda",[-3.67661,-0.246263,0.58894],0.07],["CUP_vojenska_palanda",[1.06362,-1.02165,0.58894],359.93]]];
                _edificio setVariable ["BUCHEDEG_amueblado", 1];
                _edificio setVariable ["BUCHEDEG_muebles", _plantillas];
            };
            
            case "Land_House_1W11_F": {
                _plantillas = [[["Land_Bench_EP1",[-5.64888,-1.05785,0.770939],0.53],["Land_TableDesk_F",[-2.04975,2.18337,1.12288],0.47]]];
                _edificio setVariable ["BUCHEDEG_amueblado", 1];
                _edificio setVariable ["BUCHEDEG_muebles", _plantillas];
            };
            
            case "Land_House_1W09_F": {
                _plantillas = [[["Land_OfficeCabinet_02_F",[-4.27849,0.776488,1.35533],-271.21],["Land_Metal_rack_F",[-2.94841,3.21985,1.47484],-270.79]]];
                _edificio setVariable ["BUCHEDEG_amueblado", 1];
                _edificio setVariable ["BUCHEDEG_muebles", _plantillas];
            };
            
            case "Land_House_1B01_F": {
                _plantillas = [[["CUP_Skrin_bar",[-0.483921,-2.54648,0.13305],0],["Land_TableDesk_F",[-1.35599,-4.74057,0.54011],90]]];
                _edificio setVariable ["BUCHEDEG_amueblado", 1];
                _edificio setVariable ["BUCHEDEG_muebles", _plantillas];
            };
            
            case "Land_House_2W04_F": {
                _plantillas = [[["Land_Boots_EP1",[-1.92258,0.890834,0.970484],-272],["Land_Boots_EP1",[-1.91111,-0.539836,0.970484],-272]]];
                _edificio setVariable ["BUCHEDEG_amueblado", 1];
                _edificio setVariable ["BUCHEDEG_muebles", _plantillas];
            };
            
            case "Land_House_2W03_F": {
                _plantillas = [[["Land_GarbageHeap_04_F",[-1.42803,-0.226821,0.996608],-166.05],["Land_Ground_sheet_blue_F",[-4.3615,1.32445,5.28363],357.84]]];
                _edificio setVariable ["BUCHEDEG_amueblado", 1];
                _edificio setVariable ["BUCHEDEG_muebles", _plantillas];
            };
            
            case "Land_VillageStore_01_F": {
                _plantillas = [[["Land_CashDesk_F",[-1.86461,1.42983,0.74716],-0.51],["Land_Icebox_F",[-0.0550334,1.31558,1.36906],-0.51]]];
                _edificio setVariable ["BUCHEDEG_amueblado", 1];
                _edificio setVariable ["BUCHEDEG_muebles", _plantillas];
            };
            
            case "Land_House_1W03_F": {
                _plantillas = [[["SmallTable",[0.801584,1.19811,0.694487],359.71],["Land_Photoframe_01_broken_F",[-1.72869,4.50194,0.310377],-117.28]]];
                _edificio setVariable ["BUCHEDEG_amueblado", 1];
                _edificio setVariable ["BUCHEDEG_muebles", _plantillas];
            };
            
            case "Land_PoliceStation_01_F": {
                _plantillas = [[["CUP_office_table_a",[4.91359,-2.70477,4.60219],0.57],["Land_HumanSkeleton_F",[3.3506,-2.89373,1.04318],22.69]]];
                _edificio setVariable ["BUCHEDEG_amueblado", 1];
                _edificio setVariable ["BUCHEDEG_muebles", _plantillas];
            };
            
            case "Land_Offices_01_V1_F": {
                _plantillas = [[["Land_Sofa_01_F",[0.495095,-4.14843,1.37311],0],["Land_Photoframe_01_F",[-0.120139,1.91505,2.8394],90]]];
                _edificio setVariable ["BUCHEDEG_amueblado", 1];
                _edificio setVariable ["BUCHEDEG_muebles", _plantillas];
            };
            
            case "Land_i_Garage_V1_F": {
                _plantillas = [[["Land_Pallet_vertical_F",[-1.50049,2.52451,0.891365],-270],["Land_CanisterFuel_Red_F",[0.126464,-2.13174,0.429497],330]]];
                _edificio setVariable ["BUCHEDEG_amueblado", 1];
                _edificio setVariable ["BUCHEDEG_muebles", _plantillas];
            };
            
            case "Land_Slum_House01_F": {
                _plantillas = [[["Land_CanisterPlastic_F",[-1.42668,-1.49434,0.34782],90],["Land_Basket_F",[0.850666,0.597452,0.344494],-120]]];
                _edificio setVariable ["BUCHEDEG_amueblado", 1];
                _edificio setVariable ["BUCHEDEG_muebles", _plantillas];
            };
            
            case "Land_i_Shed_Ind_F": {
                _plantillas = [[["Land_Camera_01_F",[-7.46147,0.331328,0.921127],-87.15],["Land_CinderBlocks_F",[4.0688,-1.0759,-0.00965142],-45]]];
                _edificio setVariable ["BUCHEDEG_amueblado", 1];
                _edificio setVariable ["BUCHEDEG_muebles", _plantillas];
            };
            
            case "Land_CarService_F": {
                _plantillas = [[["Land_ToolTrolley_01_F",[-4.7163,-0.427365,0.999079],75],["Land_CanisterPlastic_F",[-4.67431,-4.61194,0.877817],71.5]]];
                _edificio setVariable ["BUCHEDEG_amueblado", 1];
                _edificio setVariable ["BUCHEDEG_muebles", _plantillas];
            };
            
            case "Land_u_Addon_02_V1_F": {
                _plantillas = [[["Land_CanisterFuel_Blue_F",[-3.13876,1.15385,0.575845],-15],["Land_Pallet_vertical_F",[-3.23984,-1.41647,1.03994],0]]];
                _edificio setVariable ["BUCHEDEG_amueblado", 1];
                _edificio setVariable ["BUCHEDEG_muebles", _plantillas];
            };
            
            case "Land_i_Stone_Shed_V1_F": {
                _plantillas = [[["Land_WoodenTable_small_F",[-2.89829,0.718148,0.669911],270],["Land_ChairWood_F",[-2.39438,0.757211,0.228291],65]]];
                _edificio setVariable ["BUCHEDEG_amueblado", 1];
                _edificio setVariable ["BUCHEDEG_muebles", _plantillas];
            };
            
            case "Land_i_Stone_HouseSmall_V1_F": {
                _plantillas = [[["Land_Sacks_heap_F",[-1.23016,-1.92039,1.61942],90],["Land_MetalBarrel_empty_F",[-2.38641,-2.06102,1.64298],-80]]];
                _edificio setVariable ["BUCHEDEG_amueblado", 1];
                _edificio setVariable ["BUCHEDEG_muebles", _plantillas];
            };
            
            case "Land_i_House_Small_02_V1_F": {
                _plantillas = [[["Land_Sleeping_bag_brown_folded_F",[3.84399,-2.66361,0.827129],90],["Land_Ground_sheet_folded_F",[4.04907,-2.72123,1.10575],-285]]];
                _edificio setVariable ["BUCHEDEG_amueblado", 1];
                _edificio setVariable ["BUCHEDEG_muebles", _plantillas];
            };
            
            case "i_House_Big_01_b_base_F": {
                _plantillas = [[["Land_FlowerPot_01_F",[-4.17919,-4.98271,0.484679],-180],["Land_FlowerPot_01_Flower_F",[-3.97021,1.39229,1.24438],15]]];
                _edificio setVariable ["BUCHEDEG_amueblado", 1];
                _edificio setVariable ["BUCHEDEG_muebles", _plantillas];
            };
            
            case "i_House_Big_02_b_base_F": {
                _plantillas = [[["Land_ShelvesWooden_blue_F",[-4.25422,-4.04848,4.16836],90],["Land_ShelvesWooden_khaki_F",[-4.25422,4.07603,4.16836],90]]];
                _edificio setVariable ["BUCHEDEG_amueblado", 1];
                _edificio setVariable ["BUCHEDEG_muebles", _plantillas];
            };
            
            case "i_House_Small_01_b_base_F": {
                _plantillas = [[["Land_TableBig_01_F",[-2.16441,-0.984987,0.697113],330],["Land_ChairWood_F",[-1.89781,-1.67249,0.258186],330]]];
                _edificio setVariable ["BUCHEDEG_amueblado", 1];
                _edificio setVariable ["BUCHEDEG_muebles", _plantillas];
            };
            
            case "i_Stone_House_Big_01_b_base_F": {
                _plantillas = [[["Land_Camping_Light_off_F",[-3.27483,-1.2476,4.08806],90],["Land_Rope_01_F",[-3.27336,-1.65385,3.34361],-15]]];
                _edificio setVariable ["BUCHEDEG_amueblado", 1];
                _edificio setVariable ["BUCHEDEG_muebles", _plantillas];
            };
            
            case "Land_i_House_Small_03_V1_F": {
                _plantillas = [[["Land_File_F",[-5.15211,-0.975126,0.740405],-140],["Land_WoodenBed_01_F",[-4.38428,0.509249,0.724895],-90]]];
                _edificio setVariable ["BUCHEDEG_amueblado", 1];
                _edificio setVariable ["BUCHEDEG_muebles", _plantillas];
            };
            
            case "i_Shop_02_b_base_F": {
                _plantillas = [[["Land_WoodenBed_01_F",[-2.1706,-2.68326,4.79094],-270],["Land_Can_V2_F",[-1.86835,-1.57632,1.34749],78]]];
                _edificio setVariable ["BUCHEDEG_amueblado", 1];
                _edificio setVariable ["BUCHEDEG_muebles", _plantillas];
            };
            
            case "Land_FuelStation_01_workshop_F": {
                _plantillas = [[["Land_Bucket_painted_F",[-3.02768,4.67394,1.36981],340],["Land_ButaneCanister_F",[0.458643,4.75597,0.464888],-5]]];
                _edificio setVariable ["BUCHEDEG_amueblado", 1];
                _edificio setVariable ["BUCHEDEG_muebles", _plantillas];
            };
            
            default {
                _edificio setVariable ["BUCHEDEG_amueblado", -1];
            };
        };
    };
    
    // Procesar si está configurado y visible
    if (_edificio getVariable ["BUCHEDEG_amueblado", 0] == 1 && 
        {!(isObjectHidden _edificio)} && 
        {count (_edificio nearEntities ["Man", 7]) == 0}) then {
        
        _items = _edificio getVariable ["BUCHEDEG_muebles", []];
        _edificio setVariable ["BUCHEDEG_amueblado", 2, true];
        private _dir = getDir _edificio;
        _spawned = [];
        
        // Crear muebles
        if (isServer) then {
            {
                if (random 1 > 0.25) then {
                    // Inicialización segura con valores por defecto
                    private _item = "";
                    private _rawOffset = [0,0,0];
                    private _rawAngulo = 0;
                    
                    // Extraer datos con verificación
                    if (count _x > 0) then { _item = _x select 0; };
                    if (count _x > 1) then { _rawOffset = _x select 1; };
                    if (count _x > 2) then { _rawAngulo = _x select 2; };
                    
                    // Verificar que el item no esté vacío
                    if (_item != "") then {
                        // Procesar coordenadas seguras
                        private _x1 = 0;
                        private _y1 = 0;
                        private _z1 = 0;
                        
                        if (typeName _rawOffset == "ARRAY") then {
                            if (count _rawOffset > 0) then {
                                _x1 = if (typeName (_rawOffset select 0) == "STRING") then {
                                    parseNumber (_rawOffset select 0)
                                } else {
                                    _rawOffset select 0
                                };
                            };
                            
                            if (count _rawOffset > 1) then {
                                _y1 = if (typeName (_rawOffset select 1) == "STRING") then {
                                    parseNumber (_rawOffset select 1)
                                } else {
                                    _rawOffset select 1
                                };
                            };
                            
                            if (count _rawOffset > 2) then {
                                _z1 = if (typeName (_rawOffset select 2) == "STRING") then {
                                    parseNumber (_rawOffset select 2)
                                } else {
                                    _rawOffset select 2
                                };
                            };
                        };
                        
                        // Procesar ángulo seguro
                        private _angulo = if (typeName _rawAngulo == "STRING") then {
                            parseNumber _rawAngulo
                        } else {
                            _rawAngulo
                        };
                        
                        // Obtener posición segura del edificio
                        private _basePos = getPosATL _edificio;
                        private _pos = [0,0,0];
                        
                        // Verificar que _basePos es un array válido
                        if (typeName _basePos == "ARRAY" && {count _basePos >= 3}) then {
                            // Extraer componentes para prevenir errores en operaciones
                            private _posX = _basePos select 0;
                            private _posY = _basePos select 1;
                            private _posZ = _basePos select 2;
                            
                            // Crear posición segura
                            _pos = [
                                _posX + _x1,
                                _posY + _y1,
                                _posZ + _z1
                            ];
                        };
                        
                        // Crear objeto con manejo de errores
                        try {
                            private _mueble = createVehicle [_item, [0,0,0], [], 0, "CAN_COLLIDE"];
                            _mueble setPosATL _pos;
                            _mueble setDir (_dir - _angulo);
                            _mueble enableSimulation false;
                            _mueble allowDamage false;
                            
                            _spawned pushBack _mueble;
                        } catch {
                            ["Error al crear mueble: " + str(_item)] call BUCHEDEG_fnc_log;
                        };
                        
                        sleep 0.05;
                    };
                };
            } forEach _items;
            
            // Registrar objetos con control de errores
            if (count _spawned > 0) then {
                private _idsMuebles = [];
                {
                    if (!isNull _x) then {
                        _idsMuebles pushBack (netId _x);
                    };
                } forEach _spawned;
                
                _edificio setVariable ["BUCHEDEG_muebles_ids", _idsMuebles, true];
                
                // Añadir event handlers
                if (isNil {_edificio getVariable "BUCHEDEG_eventHandlers"}) then {
                    _edificio setVariable ["BUCHEDEG_eventHandlers", true];
                    
                    _edificio addEventHandler ["Deleted", {
                        params ["_edificio"];
                        private _ids = _edificio getVariable ["BUCHEDEG_muebles_ids", []];
                        {
                            private _mueble = objectFromNetId _x;
                            if (!isNull _mueble) then {
                                deleteVehicle _mueble;
                            };
                        } forEach _ids;
                    }];
                    
                    _edificio addEventHandler ["Killed", {
                        params ["_edificio"];
                        [_edificio] call BUCHEDEG_fnc_manejarDestruccion;
                    }];
                };
            };
        };
        
        // Añadir a lista global
        BUCHEDEG_muebles_casas pushBack _edificio;
        ["Casa amueblada: " + str(typeOf _edificio)] call BUCHEDEG_fnc_log;
    };
};

// JIP SINCRONIZACIÓN
BUCHEDEG_fnc_sincronizarJIP = {
    {
        private _casa = _x;
        private _estado = _casa getVariable ["BUCHEDEG_amueblado", 0];
        
        if (_estado == 2) then {
            private _ids = _casa getVariable ["BUCHEDEG_muebles_ids", []];
            private _muebles = [];
            
            {
                private _mueble = objectFromNetId _x;
                if (!isNull _mueble) then {
                    _muebles pushBack _mueble;
                };
            } forEach _ids;
            
            _casa setVariable ["BUCHEDEG_spawned", _muebles];
        };
    } forEach (nearestObjects [player, ["House"], BUCHEDEG_muebles_radio * 1.5]);
};

// ELIMINAR MUEBLES
BUCHEDEG_fnc_eliminarMuebles = {
    params ["_edificio"];
    
    if (isServer) then {
        private _ids = _edificio getVariable ["BUCHEDEG_muebles_ids", []];
        
        {
            private _mueble = objectFromNetId _x;
            if (!isNull _mueble) then {
                deleteVehicle _mueble;
            };
        } forEach _ids;
        
        _edificio setVariable ["BUCHEDEG_amueblado", 1, true];
        _edificio setVariable ["BUCHEDEG_muebles_ids", [], true];
    };
};

// MANEJAR DESTRUCCIÓN
BUCHEDEG_fnc_manejarDestruccion = {
    params ["_edificio"];
    
    if (_edificio getVariable ["BUCHEDEG_amueblado", 0] != 2) exitWith {};
    
    private _ids = _edificio getVariable ["BUCHEDEG_muebles_ids", []];
    private _muebles = [];
    
    {
        private _mueble = objectFromNetId _x;
        if (!isNull _mueble) then {
            _muebles pushBack _mueble;
        };
    } forEach _ids;
    
    if (({_x distance _edificio < 100} count allPlayers) == 0) then {
        ["Edificio destruido: muebles intactos"] call BUCHEDEG_fnc_log;
    } else {
        if (isServer) then {
            private _pos = getPosATL _edificio;
            "SmallSecondary" createVehicle _pos;
            
            {
                if (!isNull _x) then {
                    _x enableSimulation true;
                    _x allowDamage true;
                    
                    private _dir = random 360;
                    private _fuerza = 5 + random 10;
                    private _altura = 2 + random 3;
                    
                    private _vel = [
                        sin(_dir) * _fuerza, 
                        cos(_dir) * _fuerza, 
                        _altura
                    ];
                    
                    _x setVelocity _vel;
                    [_x, random 360] remoteExec ["setDir", 0];
                };
            } forEach _muebles;
            ["Edificio destruido: muebles dispersados"] call BUCHEDEG_fnc_log;
        };
    };
    
    _edificio setVariable ["BUCHEDEG_amueblado", -2, true];
    BUCHEDEG_muebles_casas = BUCHEDEG_muebles_casas - [_edificio];
};

// EVENTOS ZEUS
BUCHEDEG_fnc_manejarEliminacion = {
    params ["_edificio"];
    
    if (isNull _edificio) exitWith {};
    
    if (_edificio getVariable ["BUCHEDEG_amueblado", 0] == 2) then {
        private _ids = _edificio getVariable ["BUCHEDEG_muebles_ids", []];
        
        {
            private _mueble = objectFromNetId _x;
            if (!isNull _mueble) then {
                deleteVehicle _mueble;
            };
        } forEach _ids;
        
        BUCHEDEG_muebles_casas = BUCHEDEG_muebles_casas - [_edificio];
        ["Edificio eliminado por Zeus"] call BUCHEDEG_fnc_log;
    };
};

// ════ BUCLE PRINCIPAL ════
sleep 5;

// JIP
if (!isServer && hasInterface) then {
    [] spawn {
        sleep 8;
        [] call BUCHEDEG_fnc_sincronizarJIP;
    };
};

// BUCLE PRINCIPAL
[] spawn {
    private ["_edificios", "_edificio"];
    
    while {true} do {
        if (BUCHEDEG_muebles_activo && 
            {player == vehicle player} && 
            {player distance BUCHEDEG_muebles_ultimapos > (BUCHEDEG_muebles_radio / 2)}) then {
            
            BUCHEDEG_muebles_ultimapos = position player;
            _edificios = player nearObjects ["House", BUCHEDEG_muebles_radio];
            
            {
                [_x] spawn BUCHEDEG_fnc_amueblarCasa;
            } forEach _edificios;
            
            for "_i" from 0 to count BUCHEDEG_muebles_casas - 1 do {
                _edificio = BUCHEDEG_muebles_casas select _i;
                
                if (!isNull _edificio && {_edificio distance player > BUCHEDEG_muebles_radio}) then {
                    [_edificio] call BUCHEDEG_fnc_eliminarMuebles;
                    BUCHEDEG_muebles_casas set [_i, objNull];
                };
            };
            
            BUCHEDEG_muebles_casas = BUCHEDEG_muebles_casas - [objNull];
        };
        
        sleep BUCHEDEG_muebles_tiempo;
    };
};

// DETECTOR DE CASAS ELIMINADAS
if (isServer) then {
    [] spawn {
        while {true} do {
            for "_i" from 0 to (count BUCHEDEG_muebles_casas - 1) do {
                if (_i < count BUCHEDEG_muebles_casas) then {
                    private _casa = BUCHEDEG_muebles_casas select _i;
                    
                    if (isNull _casa) then {
                        private _ids = _casa getVariable ["BUCHEDEG_muebles_ids", []];
                        
                        {
                            private _mueble = objectFromNetId _x;
                            if (!isNull _mueble) then {
                                deleteVehicle _mueble;
                            };
                        } forEach _ids;
                        
                        BUCHEDEG_muebles_casas set [_i, objNull];
                    };
                };
            };
            
            BUCHEDEG_muebles_casas = BUCHEDEG_muebles_casas - [objNull];
            sleep 15;
        };
    };
};

["Sistema de amueblado iniciado - Versión " + BUCHEDEG_muebles_version] call BUCHEDEG_fnc_log;
