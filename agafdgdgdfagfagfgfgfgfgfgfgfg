// ===== SISTEMA A3PE INTEGRADO OPTIMIZADO EXTENDIDO =====

// === Definición de funciones A3PE ===
A3PE_fnc_loop = {
    params ["_unitarray","_player"];
    private ["_onoff", "_ViewDistance", "_ZeusCam", "_IsInUAV", "_ShownUAV", "_UAV", "_ForceRenderDistance", "_ForceRenderDistanceZeus"];
    
    // Procesamiento prioritario para unidades cercanas que podrían ser enemigos
    {
        if (!isPlayer _x && {side _x != side _player} && {_player distance _x < 100}) then {
            // Siempre mostrar unidades enemigas cercanas
            [{ _this hideObject false; }, _x] remoteExecCall ["call", _player];
        };
    } forEach _unitarray;
    
    // Obtenemos parámetros o usamos valores predeterminados si no existen
    _onoff = missionNamespace getVariable ["A3PE_onoff", true];
    _ViewDistance = missionNamespace getVariable ["A3PE_ViewDistance", viewDistance];
    _ZeusCam = missionNamespace getVariable ["A3PE_ZeusCam", [0,0,0]];
    _IsInUAV = missionNamespace getVariable ["A3PE_IsInUAV", [0,""]];
    _ShownUAV = missionNamespace getVariable ["A3PE_ShownUAV", false];
    _UAV = getConnectedUAV _player;
    _ForceRenderDistance = missionNamespace getVariable ["A3PE_ForceRenderDistance", 10];
    _ForceRenderDistanceZeus = missionNamespace getVariable ["A3PE_ForceRenderDistanceZeus", 10];

    _allObjsHide = [];
    _allObjsShow = [];
    
    {
        if (!isPlayer _x) then {
            if (_ViewDistance > _player distance2D _x) then {
                if (_player distance2D _x > _ForceRenderDistance) then {
                    _obj = _x;
                    _vis = 0;
                    _selections = ["rightleg","leftleg","rightarm","leftarm","head"];
                    {
                        if (_vis == 0) then {
                            _pos = _obj selectionPosition _x;
                            _pos2 = _obj modelToWorld _pos;
                            if (isNull objectParent _player) then {
                                _visnum = [_player, "VIEW", _obj] checkVisibility [eyePos _player, AGLToASL _pos2];
                                _vis = _vis + _visnum;
                            } else {
                                _visnum = [(vehicle _player), "VIEW", _obj] checkVisibility [eyePos _player, AGLToASL _pos2];
                                _vis = _vis + _visnum;
                            };
                        };
                    } forEach _selections;

                    if (_vis == 0) then {
                        _allObjsHide pushBack _obj;
                    } else {
                        _allObjsShow pushBack _obj;
                    };
                } else {_allObjsShow pushBack _x;};
            } else {_allObjsHide pushBack _x;};
        };
    } forEach _unitarray;

    // Aplicar visibilidad
    if (count _allObjsHide > 0) then {
        [{_x hideObject true;}, _allObjsHide] remoteExecCall ["forEach", _player];
    };
    if (count _allObjsShow > 0) then {
        [{_x hideObject false;}, _allObjsShow] remoteExecCall ["forEach", _player];
    };
};

// Función optimizada para objetos genéricos (vehículos, muebles, etc.)
A3PE_fnc_loopObjectsOptimized = {
    params ["_objarray", "_player", "_forceRenderDist"];
    private ["_ViewDistance"];
    
    _ViewDistance = missionNamespace getVariable ["A3PE_ViewDistance", viewDistance];
    _allObjsHide = [];
    _allObjsShow = [];
    
    // 1. Primer filtro rápido por distancia (cálculo ligero)
    _objToCheck = _objarray select {_ViewDistance > _player distance2D _x && {_player distance2D _x > _forceRenderDist}};
    
    // 2. Limitar cantidad
    if (count _objToCheck > 20) then {
        _objToCheck resize 20;
    };
    
    // 3. Comprobar visibilidad solo para objetos preseleccionados
    {
        _obj = _x;
        
        // Usar comprobación de intersección en lugar de checkVisibility cuando sea posible
        // lineIntersects es más rápido que checkVisibility
        _startPos = eyePos _player;
        _endPos = AGLToASL (_obj modelToWorld [0,0,0]);
        _intersects = lineIntersects [_startPos, _endPos, _player, _obj];
        
        if (_intersects) then {
            _allObjsHide pushBack _obj;
        } else {
            // Verificación secundaria solo si la primera falla
            if (terrainIntersect [ASLToAGL _startPos, ASLToAGL _endPos]) then {
                _allObjsHide pushBack _obj;
            } else {
                _allObjsShow pushBack _obj;
            };
        };
    } forEach _objToCheck;
    
    // Objetos cercanos siempre visibles
    {
        if (_player distance2D _x <= _forceRenderDist && !(_x in _allObjsShow)) then {
            _allObjsShow pushBack _x;
        };
    } forEach _objarray;
    
    // Objetos muy lejanos siempre ocultos
    {
        if (_ViewDistance <= _player distance2D _x && !(_x in _allObjsHide) && !(_x in _allObjsShow)) then {
            _allObjsHide pushBack _x;
        };
    } forEach _objarray;
    
    // Aplicar visibilidad
    if (count _allObjsHide > 0) then {
        [{_x hideObject true;}, _allObjsHide] remoteExecCall ["forEach", _player];
    };
    if (count _allObjsShow > 0) then {
        [{_x hideObject false;}, _allObjsShow] remoteExecCall ["forEach", _player];
    };
};

A3PE_fnc_hide = {
    params ["_player"];
    
    // Verificar si A3PE está activo
    private _A3PE_active = missionNamespace getVariable ["A3PE_active", true];
    if (!_A3PE_active) exitWith {};
    
    private ["_ViewDistance", "_ZeusCam", "_IsInUAV", "_ShownUAV", "_UAV", "_ForceRenderDistance", "_HideWeapons", "_ForceRenderDistanceZeus"];
    
    // Usar valores de configuración global
    _ViewDistance = viewDistance;
    _ZeusCam = getPosASL curatorCamera;
    _IsInUAV = UAVControl (getConnectedUAV _player);
    _ShownUAV = shownUAVFeed;
    _UAV = getConnectedUAV _player;
    _ForceRenderDistance = missionNamespace getVariable ["A3PE_ForceRenderDistance", 10];
    _HideWeapons = missionNamespace getVariable ["A3PE_HideWeapons", true];
    _ForceRenderDistanceZeus = missionNamespace getVariable ["A3PE_ForceRenderDistanceZeus", 10];
    
    // Nuevas variables de configuración
    _HideVehicles = missionNamespace getVariable ["A3PE_HideVehicles", true];
    _HideAnimals = missionNamespace getVariable ["A3PE_HideAnimals", true];
    _HideFurniture = missionNamespace getVariable ["A3PE_HideFurniture", false];
    _HideRocks = missionNamespace getVariable ["A3PE_HideRocks", false];
    _HidePlants = missionNamespace getVariable ["A3PE_HidePlants", false];
    _HideDebris = missionNamespace getVariable ["A3PE_HideDebris", false];
    _HideSigns = missionNamespace getVariable ["A3PE_HideSigns", false];
    _HideItems = missionNamespace getVariable ["A3PE_HideItems", false];
    _HideDoors = missionNamespace getVariable ["A3PE_HideDoors", false];
    _HideWindows = missionNamespace getVariable ["A3PE_HideWindows", false];
    _HideContainers = missionNamespace getVariable ["A3PE_HideContainers", false];
    
    // Procesamiento sólo cada ciertos frames
    _frameCounter = missionNamespace getVariable ["A3PE_frameCounter", 0];
    _frameCounter = _frameCounter + 1;
    if (_frameCounter >= 30) then {
        _frameCounter = 0;
    };
    missionNamespace setVariable ["A3PE_frameCounter", _frameCounter];

    // Dividir unidades para un mejor rendimiento
    _allunits = allUnits;
    
    // Limitar cantidad máxima de unidades a procesar
    if (count _allunits > 100) then {
        _allunits resize 100;
    };
    
    _allunits1 = [_allunits, ((count _allunits) / 2)] call BIS_fnc_subSelect;
    _allunits deleteRange [((count _allunits) / 2), count _allunits];
    _allunits2 = _allunits;

    // Procesar unidades vivas
    [_allunits1, _player] call A3PE_fnc_loop;
    [_allunits2, _player] call A3PE_fnc_loop;

    // Procesar unidades muertas sólo cada 5 frames
    if (_frameCounter % 5 == 0) then {
        _alldeadmen = allDeadMen;
        
        // Limitar cantidad de muertos
        if (count _alldeadmen > 50) then {
            _alldeadmen resize 50;
        };
        
        _alldeadmen1 = [_alldeadmen, ((count _alldeadmen) / 2)] call BIS_fnc_subSelect;
        _alldeadmen deleteRange [((count _alldeadmen) / 2), count _alldeadmen];
        _alldeadmen2 = _alldeadmen;

        [_alldeadmen1, _player] call A3PE_fnc_loop;
        [_alldeadmen2, _player] call A3PE_fnc_loop;
    };
    
    // ===== VEHÍCULOS EXTENDIDOS =====
    if (_HideVehicles && (_frameCounter % 3 == 0)) then {
        _allVehicles = [];
        
        // Lista completa de clases de vehículos vanilla
        _vehicleClasses = [
            "Car", "Tank", "Air", "Ship", // Categorías principales
            "Car_F", "Truck_F", "Wheeled_APC_F", // Terrestres básicos
            "Tank_F", "APC_Tracked_F", // Blindados
            "Helicopter", "Plane", "VTOL_Base_F", // Aeronaves
            "Ship_F", "Boat_F", "Boat_Armed_01_base_F", // Navales
            "Motorcycle", "Quadbike_01_base_F", // Vehículos pequeños
            "UGV_01_base_F", "UAV_01_base_F", "UAV_02_base_F", "UAV_03_base_F", // Drones
            "B_LSV_01_armed_F", "B_LSV_01_unarmed_F", // Offroads militares
            "B_MRAP_01_F", "B_MRAP_01_gmg_F", "B_MRAP_01_hmg_F", // MRAP NATO
            "O_MRAP_02_F", "O_MRAP_02_gmg_F", "O_MRAP_02_hmg_F", // MRAP CSAT
            "I_MRAP_03_F", "I_MRAP_03_gmg_F", "I_MRAP_03_hmg_F", // MRAP AAF
            "B_APC_Wheeled_01_cannon_F", "O_APC_Wheeled_02_rcws_F", "I_APC_Wheeled_03_cannon_F", // APCs con ruedas
            "B_APC_Tracked_01_rcws_F", "O_APC_Tracked_02_cannon_F", "I_APC_tracked_03_cannon_F", // APCs con orugas
            "B_MBT_01_cannon_F", "O_MBT_02_cannon_F", "I_MBT_03_cannon_F", // Tanques principales
            "B_Heli_Light_01_F", "O_Heli_Light_02_F", "I_Heli_light_03_F", // Helicópteros ligeros
            "B_Heli_Transport_01_F", "B_Heli_Transport_03_F", "O_Heli_Transport_04_F", // Helicópteros de transporte
            "B_Heli_Attack_01_F", "O_Heli_Attack_02_F", // Helicópteros de ataque
            "B_Plane_CAS_01_F", "O_Plane_CAS_02_F", "I_Plane_Fighter_03_CAS_F", // Aviones CAS
            "B_Boat_Transport_01_F", "O_Boat_Transport_01_F", "I_Boat_Transport_01_F", // Botes de transporte
            "B_Boat_Armed_01_minigun_F", "O_Boat_Armed_01_hmg_F", "I_Boat_Armed_01_minigun_F", // Botes armados
            "C_Hatchback_01_F", "C_Hatchback_01_sport_F", "C_Offroad_01_F", // Vehículos civiles
            "C_Van_01_transport_F", "C_Van_01_box_F", "C_Van_02_vehicle_F", // Furgonetas civiles
            "C_Quadbike_01_F", "C_Kart_01_F", // Pequeños civiles
            "C_Scooter_Transport_01_F", "C_Boat_Civil_01_F" // Civiles acuáticos
        ];
        
        {
            _vehicles = vehicles select {_x isKindOf _x && !(_x isKindOf "WeaponHolderSimulated") && !(_x isKindOf "GroundWeaponHolder")};
            if (count _vehicles > 5) then {
                _vehicles resize 5;
            };
            _allVehicles append _vehicles;
        } forEach _vehicleClasses;
        
        // Limitar cantidad de vehículos
        if (count _allVehicles > 30) then {
            _allVehicles resize 30;
        };
        
        _allVehicles1 = [_allVehicles, ((count _allVehicles) / 2)] call BIS_fnc_subSelect;
        _allVehicles deleteRange [((count _allVehicles) / 2), count _allVehicles];
        _allVehicles2 = _allVehicles;
        
        // Distancia de renderizado mayor para vehículos
        [_allVehicles1, _player, 20] call A3PE_fnc_loopObjectsOptimized;
        [_allVehicles2, _player, 20] call A3PE_fnc_loopObjectsOptimized;
    };
    
    // ===== ANIMALES EXTENDIDOS =====
    if (_HideAnimals && (_frameCounter % 5 == 0)) then {
        _allAnimals = [];
        
        // Lista completa de clases de animales vanilla
        _animalClasses = [
            "Animal", "Animal_Base_F", 
            "Sheep_base_F", "Sheep_random_F", 
            "Goat_Base_F", "Goat_random_F", 
            "Fowl_Base_F", "Hen_random_F", "Cock_random_F", "Cock_white_F",
            "Rabbit_F",
            "Turtle_F",
            "Snake_random_F", "Snake_vipera_F",
            "Fin_Base_F", "Fin_random_F", "Fin_sand_F", "Fin_blackwhite_F", "Fin_ocherwhite_F", "Fin_tricolour_F",
            "Alsatian_Base_F", "Alsatian_Random_F", "Alsatian_Sand_F", "Alsatian_Black_F", "Alsatian_Sandblack_F",
            "Cow_Base_F", "Cow_random_F", "Cow_01_F", "Cow_02_F", "Cow_03_F", "Cow_04_F", 
            "Deer_Base_F", "Deer_random_F"
        ];
        
        {
            _animals = allMissionObjects _x;
            if (count _animals > 5) then {
                _animals resize 5;
            };
            _allAnimals append _animals;
        } forEach _animalClasses;
        
        // Limitar la cantidad total
        if (count _allAnimals > 20) then {
            _allAnimals resize 20;
        };
        
        [_allAnimals, _player, 15] call A3PE_fnc_loopObjectsOptimized;
    };
    
    // Solo procesamos un tipo de objeto adicional por ciclo para distribuir la carga
    // Y solo si tenemos pocos frames acumulados (indica buen rendimiento)
    if (_frameCounter < 10) then {
        switch (_frameCounter % 9) do {
            // ===== MUEBLES EXTENDIDOS =====
            case 0: {
                if (_HideFurniture) then {
                    _allFurniture = [];
                    
                    // Lista completa de clases de muebles vanilla
                    _furnitureClasses = [
                        "Furniture_base_F", 
                        "Land_CampingChair_V1_F", "Land_CampingChair_V2_F", "Land_CampingTable_F", "Land_CampingTable_small_F",
                        "Land_ChairPlastic_F", "Land_ChairWood_F", 
                        "Land_TableDesk_F", "Land_TablePlastic_01_F", "Land_WoodenTable_large_F", "Land_WoodenTable_small_F",
                        "Land_Bench_01_F", "Land_Bench_02_F", "Land_Bench_03_F", "Land_Bench_04_F", "Land_Bench_05_F",
                        "Land_Sofa_01_F", "Land_Sofa_02_F", "Land_ArmChair_01_F",
                        "Land_RattanChair_01_F", "Land_RattanTable_01_F",
                        "Land_OfficeChair_01_F", "Land_OfficeTable_01_F", 
                        "Land_TableSmall_01_F",
                        "Land_Sink_F", "Land_Sink_counter_F",
                        "Land_ShelvesWooden_F", "Land_ShelvesWooden_blue_F", "Land_ShelvesWooden_khaki_F",
                        "Land_OfficeCabinet_01_F", "Land_OfficeCabinet_02_F", 
                        "Land_Fridge_01_F", "Land_Fridge_01_closed_F", "Land_Fridge_01_open_F",
                        "Land_Metal_rack_Tall_F", "Land_Metal_rack_F", "Land_Metal_wooden_rack_F", "Land_Rack_F", 
                        "Land_ShelvesMetal_F", "Land_ShelvesWooden_F",
                        "Land_TableBig_01_F", "Land_DeskChair_01_F", "Land_WoodenCounter_01_F",
                        "Land_ToolTrolley_01_F", "Land_ToolTrolley_02_F",
                        "Land_Workbench_01_F", "Workbench_01_base_F",
                        "Land_ConnectorStructure_01_F"
                    ];
                    
                    {
                        _furniture = allMissionObjects _x;
                        if (count _furniture > 3) then {
                            _furniture resize 3;
                        };
                        _allFurniture append _furniture;
                    } forEach _furnitureClasses;
                    
                    // Limitar cantidad
                    if (count _allFurniture > 15) then {
                        _allFurniture resize 15;
                    };
                    
                    [_allFurniture, _player, 10] call A3PE_fnc_loopObjectsOptimized;
                };
            };
            
            // ===== ROCAS EXTENDIDAS =====
            case 1: {
                if (_HideRocks) then {
                    _allRocks = [];
                    
                    // Lista completa de clases de rocas vanilla
                    _rockClasses = [
                        "Land_Small_Stone_01_F", "Land_Small_Stone_02_F", 
                        "Land_BluntRock_apart", "Land_BluntRock_monolith", "Land_BluntRock_spike", "Land_BluntRock_wallH", "Land_BluntRock_wallV",
                        "Land_BluntStone_01", "Land_BluntStone_02", "Land_BluntStone_03",
                        "Land_W_sharpRock_apart", "Land_W_sharpRock_monolith", "Land_W_sharpRock_spike", "Land_W_sharpRock_wallH", "Land_W_sharpRock_wallV",
                        "Land_W_sharpStone_01", "Land_W_sharpStone_02", "Land_W_sharpStone_03",
                        "Land_Limestone_01_01_F", "Land_Limestone_01_02_F", "Land_Limestone_01_03_F", "Land_Limestone_01_04_F", "Land_Limestone_01_05_F",
                        "Land_Limestone_01_epilog_F", "Land_Limestone_01_monolith_F", "Land_Limestone_01_spike_F", "Land_Limestone_01_wall_F",
                        "Land_Stone_01_F", "Land_Stone_02_F", "Land_Stone_03_F", "Land_Stone_04_F", "Land_Stone_05_F",
                        "Land_StoneCluster_01_F", "Land_StoneCluster_02_F"
                    ];
                    
                    {
                        _rocks = allMissionObjects _x;
                        if (count _rocks > 3) then {
                            _rocks resize 3;
                        };
                        _allRocks append _rocks;
                    } forEach _rockClasses;
                    
                    // Limitar cantidad
                    if (count _allRocks > 10) then {
                        _allRocks resize 10;
                    };
                    
                    [_allRocks, _player, 8] call A3PE_fnc_loopObjectsOptimized;
                };
            };
            
            // ===== PLANTAS EXTENDIDAS =====
            case 2: {
                if (_HidePlants) then {
                    _allPlants = [];
                    
                    // Lista completa de clases de plantas vanilla
                    _plantClasses = [
                        "PlantBase_F", 
                        "Land_Bush_01_F", "Land_Bush_02_F", "Land_Bush_03_F", 
                        "Land_Fern_01_F", "Land_Fern_02_F",
                        "Land_Grass_1_F", "Land_Grass_2_F", "Land_Grass_3_F", "Land_Grass_4_F", "Land_Grass_5_F", "Land_Grass_6_F", "Land_Grass_7_F", "Land_Grass_8_F",
                        "Land_Plant_1_F", "Land_Plant_2_F", "Land_Plant_3_F", "Land_Plant_4_F", "Land_Plant_5_F", "Land_Plant_6_F", "Land_Plant_7_F", "Land_Plant_8_F",
                        "Land_Flower_1_F", "Land_Flower_2_F", "Land_Flower_3_F", "Land_Flower_4_F", "Land_Flower_5_F", "Land_Flower_6_F",
                        "Land_GrassLong_F", "Land_GrassTall_F", "Land_SmallBush_F", 
                        "Land_TBush_01_F", "Land_TBush_02_F",
                        "Land_nettle_1_F", "Land_nettle_2_F", "Land_nettle_3_F", "Land_nettle_4_F",
                        "Land_Weat_1_F", "Land_Weat_2_F", "Land_Weat_3_F", "Land_Weat_Bunch_F",
                        "Land_b_thistle_thorn_green_F", "Land_b_thistle_thorn_grey_F", "Land_c_thistle_thorn_grey_F", "Land_d_thistle_thorn_grey_F",
                        "Land_Cress_Patch_F", "Land_Clutter_Grass_Dry_F", "Land_Clutter_Grass_Fern_F", "Land_Clutter_Grass_Green_F"
                    ];
                    
                    {
                        _plants = allMissionObjects _x;
                        if (count _plants > 3) then {
                            _plants resize 3;
                        };
                        _allPlants append _plants;
                    } forEach _plantClasses;
                    
                    // Limitar cantidad
                    if (count _allPlants > 10) then {
                        _allPlants resize 10;
                    };
                    
                    [_allPlants, _player, 5] call A3PE_fnc_loopObjectsOptimized;
                };
            };
            
            // ===== ESCOMBROS/BASURA EXTENDIDOS =====
            case 3: {
                if (_HideDebris) then {
                    _allDebris = [];
                    
                    // Lista completa de clases de escombros vanilla
                    _debrisClasses = [
                        "Garbage_base_F", 
                        "Land_Garbage_square3_F", "Land_Garbage_square5_F", "Land_Garbage_line_F", "Land_Garbage_square_F",
                        "Land_GarbageBags_F", "Land_GarbageWashingMachine_F", "Land_GarbagePallet_F", 
                        "Land_GarbageHeap_01_F", "Land_GarbageHeap_02_F", "Land_GarbageHeap_03_F", "Land_GarbageHeap_04_F",
                        "Land_JunkPile_F",
                        "Land_Pallets_F", "Land_Pallets_stack_F",
                        "Land_ConcretePipe_F", "Land_ConcretePipe_01_F",
                        "Land_CinderBlocks_F", "Land_CinderBlocks_01_F",
                        "Land_Tyre_F", "Land_Tyres_F",
                        "Land_Wreck_Car_F", "Land_Wreck_Car2_F", "Land_Wreck_Car3_F", "Land_Wreck_CarDismantled_F", 
                        "Land_Wreck_BRDM2_F", "Land_Wreck_BMP2_F", "Land_Wreck_Truck_dropside_F", "Land_Wreck_Truck_F", "Land_Wreck_UAZ_F", "Land_Wreck_Ural_F", 
                        "Land_Wreck_Offroad_F", "Land_Wreck_Offroad2_F", "Land_Wreck_Van_F",
                        "Land_Wreck_Slammer_F", "Land_Wreck_Slammer_hull_F", 
                        "Land_Wreck_Heli_Attack_01_F", "Land_Wreck_Heli_Attack_02_F"
                    ];
                    
                    {
                        _debris = allMissionObjects _x;
                        if (count _debris > 3) then {
                            _debris resize 3;
                        };
                        _allDebris append _debris;
                    } forEach _debrisClasses;
                    
                    // Limitar cantidad
                    if (count _allDebris > 10) then {
                        _allDebris resize 10;
                    };
                    
                    [_allDebris, _player, 7] call A3PE_fnc_loopObjectsOptimized;
                };
            };
            
            // ===== SEÑALES EXTENDIDAS =====
            case 4: {
                if (_HideSigns) then {
                    _allSigns = [];
                    
                    // Lista completa de clases de señales vanilla
                    _signClasses = [
                        "Land_Sign_F", "SignAd_Sponsor_F", "Sign_Arrow_F", "Sign_Arrow_Green_F", "Sign_Arrow_Blue_F", "Sign_Arrow_Yellow_F",
                        "SignAd_SponsorS_F", "RoadCone_F", "RoadCone_L_F", 
                        "Land_Sign_WarningMilitaryArea_F", "Land_Sign_WarningMilAreaSmall_F", "Land_Sign_WarningMilitaryVehicles_F", 
                        "Land_Sign_WarningUnexplodedAmmo_F", "Land_Sign_MinesDanger_F", "Land_Sign_Mines_F",
                        "Land_Sign_Checkpoint_US_EP1", "Land_Sign_Checkpoint_CZ_EP1", "Land_Sign_Checkpoint_TK_EP1",
                        "Land_SignB_Pub_F", "Land_SignB_Hotel_F", "Land_SignB_Bar_F",
                        "Land_Billboard_01_F", "Land_Billboard_02_F", "Land_Billboard_03_F", "Land_Billboard_04_F", "Land_Billboard_05_F", 
                        "Land_Billboards_01_F", "Land_Billboards_02_F",
                        "RoadBarrier_F", "RoadBarrier_small_F", "Land_BarGate_F", "Land_RoadBarrier_01_F",
                        "PlasticBarrier_01_F", "PlasticBarrier_02_F", "PlasticBarrier_03_F"
                    ];
                    
                    {
                        _signs = allMissionObjects _x;
                        if (count _signs > 3) then {
                            _signs resize 3;
                        };
                        _allSigns append _signs;
                    } forEach _signClasses;
                    
                    // Limitar cantidad
                    if (count _allSigns > 10) then {
                        _allSigns resize 10;
                    };
                    
                    [_allSigns, _player, 8] call A3PE_fnc_loopObjectsOptimized;
                };
            };
            
            // ===== OBJETOS PEQUEÑOS E ITEMS EXTENDIDOS =====
            case 5: {
                if (_HideItems) then {
                    _allItems = [];
                    
                    // Lista completa de clases de items vanilla
                    _itemClasses = [
                        "Thing", "Items_base_F", 
                        "Land_Money_F", "Land_Suitcase_F",
                        "Land_BakedBeans_F", "Land_TacticalBacon_F", "Land_CerealsBox_F", "Land_CeresBox_F", "Land_PowderedMilk_F", "Land_BottlePlastic_V1_F", "Land_BottlePlastic_V2_F",
                        "Land_Can_V1_F", "Land_Can_V2_F", "Land_Can_V3_F", "Land_CanisterFuel_F", "Land_CanisterPlastic_F",
                        "Land_CanOpener_F", "Land_DuctTape_F", "Land_File_F", "Land_FilePhotos_F",
                        "Land_Matches_F", "Land_MobilePhone_old_F", "Land_MobilePhone_smart_F",
                        "Land_Antibiotic_F", "Land_Bandage_F", "Land_DisinfectantSpray_F", "Land_PainKillers_F", "Land_VitaminBottle_F", "Land_WaterBottle_F", "Land_WaterPurificationTablets_F",
                        "Land_Map_blank_F", "Land_Map_F", "Land_Notepad_F",
                        "Land_Knife_F", "Land_MultiMeter_F",
                        "Land_RiceBox_F", "Land_SardinesCan_F",
                        "Land_BottlePlastic_V1_F", "Land_BottlePlastic_V2_F",
                        "WeaponHolder", "WeaponHolderSimulated"
                    ];
                    
                    {
                        _items = allMissionObjects _x;
                        if (count _items > 3) then {
                            _items resize 3;
                        };
                        _allItems append _items;
                    } forEach _itemClasses;
                    
                    // Limitar cantidad
                    if (count _allItems > 10) then {
                        _allItems resize 10;
                    };
                    
                    [_allItems, _player, 6] call A3PE_fnc_loopObjectsOptimized;
                };
            };
            
            // ===== PUERTAS EXTENDIDAS =====
            case 6: {
                if (_HideDoors) then {
                    _allDoors = [];
                    
                    // Lista completa de clases de puertas vanilla
                    _doorClasses = [
                        "Land_Door_01_F", "Land_Door_02_F",
                        "Land_DoorLocked_01_F", "Land_DoorLocked_02_F",
                        "Land_House_Door_01_F", "Land_House_Door_02_F",
                        "Land_GarageRow_01_door_F", "Land_CarService_door_F",
                        "Land_ConcreteWall_01_gate_F", "Land_ConcreteWall_01_l_gate_F",
                        "Land_BackAlley_01_door_F", "Land_BackAlley_01_gate_F",
                        "Land_SCF_01_door_01_F", "Land_SCF_01_door_02_F",
                        "Land_BasaltWall_01_gate_F", "Land_IronFence_gate_F",
                        "Land_MetalGate_01_F", "Land_MetalGate_02_F", "Land_MetalGate_03_F",
                        "Land_NetFence_Gate_F"
                    ];
                    
                    {
                        _doors = allMissionObjects _x;
                        if (count _doors > 3) then {
                            _doors resize 3;
                        };
                        _allDoors append _doors;
                    } forEach _doorClasses;
                    
                    // Limitar cantidad
                    if (count _allDoors > 10) then {
                        _allDoors resize 10;
                    };
                    
                    [_allDoors, _player, 8] call A3PE_fnc_loopObjectsOptimized;
                };
            };
            
            // ===== VENTANAS EXTENDIDAS =====
            case 7: {
                if (_HideWindows) then {
                    _allWindows = [];
                    
                    // Lista completa de clases de ventanas vanilla
                    _windowClasses = [
                        "Land_Window_01_F", "Land_Window_02_F",
                        "Land_WindowBig_01_F", "Land_WindowBig_02_F",
                        "Land_WindowSmall_01_F", "Land_WindowSmall_02_F",
                        "Land_i_House_Small_01_V1_F", "Land_i_House_Small_01_V2_F", "Land_i_House_Small_01_V3_F",
                        "Land_i_House_Small_02_V1_F", "Land_i_House_Small_02_V2_F", "Land_i_House_Small_02_V3_F",
                        "Land_i_House_Big_01_V1_F", "Land_i_House_Big_01_V2_F", "Land_i_House_Big_01_V3_F",
                        "Land_i_House_Big_02_V1_F", "Land_i_House_Big_02_V2_F", "Land_i_House_Big_02_V3_F"
                    ];
                    
                    {
                        _windows = allMissionObjects _x;
                        if (count _windows > 3) then {
                            _windows resize 3;
                        };
                        _allWindows append _windows;
                    } forEach _windowClasses;
                    
                    // Limitar cantidad
                    if (count _allWindows > 10) then {
                        _allWindows resize 10;
                    };
                    
                    [_allWindows, _player, 8] call A3PE_fnc_loopObjectsOptimized;
                };
            };
            
            // ===== CONTENEDORES EXTENDIDOS =====
            case 8: {
                if (_HideContainers) then {
                    _allContainers = [];
                    
                    // Lista completa de clases de contenedores vanilla
                    _containerClasses = [
                        "ReammoBox_F", "Land_Ammobox_F", "Box_NATO_Ammo_F", "Box_East_Ammo_F", "Box_IND_Ammo_F",
                        "Land_PaperBox_01_F", "Land_PaperBox_01_small_F", "Land_PaperBox_01_open_boxes_F", "Land_PaperBox_01_open_empty_F",
                        "Land_PaperBox_closed_F", "Land_PaperBox_open_empty_F", "Land_PaperBox_open_full_F",
                        "Land_Cargo10_blue_F", "Land_Cargo10_brick_red_F", "Land_Cargo10_cyan_F", "Land_Cargo10_grey_F", "Land_Cargo10_light_blue_F", "Land_Cargo10_light_green_F", "Land_Cargo10_military_green_F", "Land_Cargo10_orange_F", "Land_Cargo10_red_F", "Land_Cargo10_sand_F", "Land_Cargo10_white_F", "Land_Cargo10_yellow_F",
                        "Land_Cargo20_blue_F", "Land_Cargo20_brick_red_F", "Land_Cargo20_cyan_F", "Land_Cargo20_grey_F", "Land_Cargo20_light_blue_F", "Land_Cargo20_light_green_F", "Land_Cargo20_military_green_F", "Land_Cargo20_orange_F", "Land_Cargo20_red_F", "Land_Cargo20_sand_F", "Land_Cargo20_white_F", "Land_Cargo20_yellow_F",
                        "Land_Cargo40_blue_F", "Land_Cargo40_brick_red_F", "Land_Cargo40_cyan_F", "Land_Cargo40_grey_F", "Land_Cargo40_light_blue_F", "Land_Cargo40_light_green_F", "Land_Cargo40_military_green_F", "Land_Cargo40_orange_F", "Land_Cargo40_red_F", "Land_Cargo40_sand_F", "Land_Cargo40_white_F", "Land_Cargo40_yellow_F",
                        "Land_CargoBox_V1_F", "Land_Cargo_House_V1_F", "Land_Cargo_House_V2_F", "Land_Cargo_House_V3_F",
                        "Land_Cargo_HQ_V1_F", "Land_Cargo_HQ_V2_F", "Land_Cargo_HQ_V3_F",
                        "Land_Cargo_Patrol_V1_F", "Land_Cargo_Patrol_V2_F", "Land_Cargo_Patrol_V3_F",
                        "Land_Cargo_Tower_V1_F", "Land_Cargo_Tower_V2_F", "Land_Cargo_Tower_V3_F",
                        "Land_Cargo_addon01_F", "Land_Cargo_addon02_F", "Land_Cargo_addon03_F",
                        "Land_PlasticCase_01_large_F", "Land_PlasticCase_01_medium_F", "Land_PlasticCase_01_small_F",
                        "Land_MetalCase_01_large_F", "Land_MetalCase_01_medium_F", "Land_MetalCase_01_small_F"
                    ];
                    
                    {
                        _containers = allMissionObjects _x;
                        if (count _containers > 3) then {
                            _containers resize 3;
                        };
                        _allContainers append _containers;
                    } forEach _containerClasses;
                    
                    // Limitar cantidad
                    if (count _allContainers > 10) then {
                        _allContainers resize 10;
                    };
                    
                    [_allContainers, _player, 9] call A3PE_fnc_loopObjectsOptimized;
                };
            };
        };
    };

    // Procesar armas si está configurado
    if (_HideWeapons && (_frameCounter % 4 == 0)) then {
        _allObjsHide = [];
        _allObjsShow = [];
        
        _weapons = allMissionObjects "GroundWeaponHolder";
        if (count _weapons > 20) then {
            _weapons resize 20;
        };
        
        {
            if (_ViewDistance > _player distance2D _x) then {
                if (_player distance2D _x > _ForceRenderDistance) then {
                    _obj = _x;
                    _vis = 0;
                    
                    if (isNull objectParent _player) then {
                        _vis = [_player, "VIEW", _obj] checkVisibility [eyePos _player, AGLToASL (position _x)];
                    } else {
                        _vis = [vehicle _player, "VIEW", _obj] checkVisibility [eyePos _player, AGLToASL (position _x)];
                    };

                    if (_vis == 0) then {
                        _allObjsHide pushBack _obj;
                    } else {
                        _allObjsShow pushBack _obj;
                    };
                } else {_allObjsShow pushBack _x;};
            } else {_allObjsHide pushBack _x;};
        } forEach _weapons;

        // Aplicar visibilidad de armas
        if (count _allObjsHide > 0) then {
            [{_x hideObject true;}, _allObjsHide] remoteExecCall ["forEach", _player];
        };
        if (count _allObjsShow > 0) then {
            [{_x hideObject false;}, _allObjsShow] remoteExecCall ["forEach", _player];
        };
    };
};

// Bucle principal A3PE
A3PE_fnc_mainLoop = {
    if (!hasInterface) exitWith {};
    
    // Establecer valores iniciales
    missionNamespace setVariable ["A3PE_active", true];
    missionNamespace setVariable ["A3PE_ForceRenderDistance", 10];
    missionNamespace setVariable ["A3PE_ForceRenderDistanceZeus", 10];
    missionNamespace setVariable ["A3PE_HideWeapons", true];
    missionNamespace setVariable ["A3PE_frameCounter", 0];
    
    // Nuevas configuraciones (desactivadas por defecto excepto vehículos y animales)
    missionNamespace setVariable ["A3PE_HideVehicles", true];
    missionNamespace setVariable ["A3PE_HideAnimals", true];
    missionNamespace setVariable ["A3PE_HideFurniture", false];
    missionNamespace setVariable ["A3PE_HideRocks", false];
    missionNamespace setVariable ["A3PE_HidePlants", false];
    missionNamespace setVariable ["A3PE_HideDebris", false];
    missionNamespace setVariable ["A3PE_HideSigns", false];
    missionNamespace setVariable ["A3PE_HideItems", false];
    missionNamespace setVariable ["A3PE_HideDoors", false];
    missionNamespace setVariable ["A3PE_HideWindows", false];
    missionNamespace setVariable ["A3PE_HideContainers", false];
    
    // Si CBA está disponible, configurar teclas y opciones
    if (OPT_tieneCBA) then {
        // Intentar añadir configuraciones CBA si no existen
        if (!isNil "cba_settings_fnc_init") then {
            ["A3PE_ForceRenderDistance", "SLIDER", ["Force Render Range", 
             "Distancia a la que se fuerza el renderizado de unidades"], 
             "Arma 3 Performance Settings", [0, 100, 10, 0], nil, {
                missionNamespace setVariable ["A3PE_ForceRenderDistance", _this];
             }, false] call CBA_fnc_addSetting;
            
            ["A3PE_ForceRenderDistanceZeus", "SLIDER", ["Zeus Force Render Range", 
             "Distancia de renderizado forzado en Zeus"], 
             "Arma 3 Performance Settings", [0, 100, 10, 0], nil, {
                missionNamespace setVariable ["A3PE_ForceRenderDistanceZeus", _this];
             }, false] call CBA_fnc_addSetting;
            
            ["A3PE_HideWeapons", "CHECKBOX", ["Ocultar Armas", 
             "Ocultar armas en el suelo"], 
             "Arma 3 Performance Settings", true, nil, {
                missionNamespace setVariable ["A3PE_HideWeapons", _this];
             }, false] call CBA_fnc_addSetting;
             
            // Configuraciones para los tipos adicionales
            ["A3PE_HideVehicles", "CHECKBOX", ["Ocultar Vehículos", 
             "Ocultar vehículos fuera de vista"], 
             "Arma 3 Performance Settings", true, nil, {
                missionNamespace setVariable ["A3PE_HideVehicles", _this];
             }, false] call CBA_fnc_addSetting;
             
            ["A3PE_HideAnimals", "CHECKBOX", ["Ocultar Animales", 
             "Ocultar animales fuera de vista"], 
             "Arma 3 Performance Settings", true, nil, {
                missionNamespace setVariable ["A3PE_HideAnimals", _this];
             }, false] call CBA_fnc_addSetting;
             
            ["A3PE_HideFurniture", "CHECKBOX", ["Ocultar Muebles", 
             "Ocultar muebles fuera de vista (puede afectar rendimiento)"], 
             "Arma 3 Performance Settings", false, nil, {
                missionNamespace setVariable ["A3PE_HideFurniture", _this];
             }, false] call CBA_fnc_addSetting;
             
            ["A3PE_HideRocks", "CHECKBOX", ["Ocultar Rocas", 
             "Ocultar rocas fuera de vista (puede afectar rendimiento)"], 
             "Arma 3 Performance Settings", false, nil, {
                missionNamespace setVariable ["A3PE_HideRocks", _this];
             }, false] call CBA_fnc_addSetting;
             
            ["A3PE_HidePlants", "CHECKBOX", ["Ocultar Plantas", 
             "Ocultar plantas fuera de vista (puede afectar rendimiento)"], 
             "Arma 3 Performance Settings", false, nil, {
                missionNamespace setVariable ["A3PE_HidePlants", _this];
             }, false] call CBA_fnc_addSetting;
             
            ["A3PE_HideDebris", "CHECKBOX", ["Ocultar Escombros", 
             "Ocultar escombros fuera de vista (puede afectar rendimiento)"], 
             "Arma 3 Performance Settings", false, nil, {
                missionNamespace setVariable ["A3PE_HideDebris", _this];
             }, false] call CBA_fnc_addSetting;
             
            ["A3PE_HideSigns", "CHECKBOX", ["Ocultar Señales", 
             "Ocultar señales fuera de vista (puede afectar rendimiento)"], 
             "Arma 3 Performance Settings", false, nil, {
                missionNamespace setVariable ["A3PE_HideSigns", _this];
             }, false] call CBA_fnc_addSetting;
             
            ["A3PE_HideItems", "CHECKBOX", ["Ocultar Objetos Pequeños", 
             "Ocultar objetos pequeños fuera de vista (puede afectar rendimiento)"], 
             "Arma 3 Performance Settings", false, nil, {
                missionNamespace setVariable ["A3PE_HideItems", _this];
             }, false] call CBA_fnc_addSetting;
             
            ["A3PE_HideDoors", "CHECKBOX", ["Ocultar Puertas", 
             "Ocultar puertas fuera de vista (puede afectar rendimiento)"], 
             "Arma 3 Performance Settings", false, nil, {
                missionNamespace setVariable ["A3PE_HideDoors", _this];
             }, false] call CBA_fnc_addSetting;
             
            ["A3PE_HideWindows", "CHECKBOX", ["Ocultar Ventanas", 
             "Ocultar ventanas fuera de vista (puede afectar rendimiento)"], 
             "Arma 3 Performance Settings", false, nil, {
                missionNamespace setVariable ["A3PE_HideWindows", _this];
             }, false] call CBA_fnc_addSetting;
             
            ["A3PE_HideContainers", "CHECKBOX", ["Ocultar Contenedores", 
             "Ocultar contenedores fuera de vista (puede afectar rendimiento)"], 
             "Arma 3 Performance Settings", false, nil, {
                missionNamespace setVariable ["A3PE_HideContainers", _this];
             }, false] call CBA_fnc_addSetting;
        };
    };
    
    // Mensaje informativo
    systemChat "A3PE activado automáticamente (versión optimizada extendida)";
    
    // Bucle principal con intervalo dinámico
    while {true} do {
        if (missionNamespace getVariable ["A3PE_active", true]) then {
            // Ajuste dinámico del intervalo basado en la velocidad del jugador
            _playerSpeed = speed (vehicle player);
            _sleepTime = 0.25; // valor predeterminado
            
            // Si el jugador se mueve rápido, reducir el tiempo de espera
            if (_playerSpeed > 30) then {
                _sleepTime = 0.12;
            } else {
                if (_playerSpeed > 15) then {
                    _sleepTime = 0.18;
                };
            };
            
            {
                [_x] call A3PE_fnc_hide;
            } forEach allPlayers;
            
            // Usar el tiempo de espera calculado
            sleep _sleepTime;
        } else {
            sleep 0.5; // si está desactivado, esperar más tiempo
        };
    };
};

// Inicialización de A3PE al inicializar OPT
OPT_fnc_inicializarA3PE = {
    // Iniciar el bucle principal en un hilo separado
    [] spawn A3PE_fnc_mainLoop;
    
    // Añadir evento para activación/desactivación manual
    if (OPT_tieneCBA && !isNil "cba_keybinding_fnc_addKeybind") then {
        ["Arma 3 Performance", "toggle_a3pe", "Toggle A3PE System", {
            private _active = !(missionNamespace getVariable ["A3PE_active", true]);
            missionNamespace setVariable ["A3PE_active", _active];
            systemChat format ["A3PE: %1", ["Desactivado", "Activado"] select _active];
            true
        }, {}, [DIK_U, [false, false, false]], false] call CBA_fnc_addKeybind;
    };
};

// ===== MODIFICAR LA FUNCIÓN DE INICIALIZACIÓN ORIGINAL =====

// Añade esto al final de tu función OPT_fnc_inicializar (línea 968 aproximadamente)
call OPT_fnc_inicializarA3PE;
